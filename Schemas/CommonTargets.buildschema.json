{
    "license": "Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information.",
    "items": {
        "Reference": {
            "description": "Reference to an assembly",
            "includeDescription": "assembly names or filenames",
            "kind": "file-list",
            "metadata": {
                "HintPath": {
                    "description": "Relative or absolute path to the assembly.",
                    "kind": "file-list"
                },
                "Name": "Friendly display name.",
                "FusionName": "Fusion name of the assembly.",
                "SpecificVersion": {
                    "description": "Whether only the version in the fusion name should be referenced.",
                    "kind": "bool"
                },
                "Aliases": "Aliases for the reference.",
                "Private": {
                    "description": "Whether the reference should be copied to the output folder.",
                    "kind": "bool"
                },
                "EmbedInteropTypes": {
                    "description": "Whether the types in this reference need to embedded into the target assembly - interop assemblies only.",
                    "kind": "bool"
                },
                "RequiredTargetFramework": {
                    "description": "The minimum required target framework version in order to use this assembly as a reference.",
                    "kind": "TargetFrameworkVersion"
                }
            }
        },
        "SDKReference": {
            "description": "Reference to a Windows 8.1 extension SDK",
            "includeDescription": "SDK name and version monikers",
            "metadata": {
                "Name": "Friendly display name (optional)."
            }
        },
        "COMReference": {
            "kind": "file-list",
            "description": "Reference to a COM component",
            "includeDescription": "COM component names",
            "metadata": {
                "Name": "Friendly display name (optional).",
                "Guid": {
                    "description": "GUID in the form {00000000-0000-0000-0000-000000000000}",
                    "kind": "guid"
                },
                "VersionMajor": {
                    "description": "Major part of the version number",
                    "kind": "int"
                },
                "VersionMinor": {
                    "description": "Minor part of the version number",
                    "kind": "int"
                },
                "Lcid": {
                    "description": "Locale ID",
                    "kind" : "lcid"
                },
                "WrapperTool": "Wrapper tool, such as tlbimp",
                "Isolated": {
                    "description": "Whether it is isolated",
                    "kind": "bool"
                },
                "EmbedInteropTypes": {
                    "description": "Whether the types in this reference need to embedded into the target assembly - interop assemblies only (optional)",
                    "kind": "bool"
                }
            }
        },
        "COMFileReference": {
            "kind": "file-list",
            "metadata": {
                "WrapperTool": ""
            }
        },
        "PackageReference": {
            "description": "Reference to a NuGet package",
            "includeDescription": "NuGet package IDs",
            "kind": "nugetid",
            "metadata": {
                "Version": {
                    "description": "The version of the NuGet package dependency",
                    "kind": "nugetversion"
                },
                "IncludeAssets": {
                    "description": "Assets that will be consumed by the project",
                    "defaultValue": "all",
                    "values": {
                        "compile": "Libraries from the `lib` folder",
                        "runtime": "Contents of the `runtime` folder",
                        "contentFiles": "All of the assets",
                        "build": "MSBuild targets",
                        "analyzers": "Code analyzers",
                        "native": "Contents of the `native` folder",
                        "none": "None of the assets",
                        "all": "All of the assets"
                    },
                    "valueSeparators": ","
                },
                "ExcludeAssets": {
                    "description": "Assets that will not be consumed by the project",
                    "defaultValue": "none",
                    "values": "%(IncludeAssets)",
                    "valueSeparators": ","
                },
                "PrivateAssets": {
                    "description": "Assets that will be consumed by the project but won't flow to its parent",
                    "defaultValue": "contentfiles,analyzers,build",
                    "values": "%(IncludeAssets)",
                    "valueSeparators": ","
                }
            }
        },
        "ProjectConfiguration": {
            "description" : "Defines a Configuration|Platform combination that may be used to build this project",
            "metadata": {
                "Configuration": {
                    "description" : "The configuration part of the project configuration",
                    "kind": "configuration",
                    "required": "true"
                },
                "Platform":  {
                    "description" : "The platform part of the project configuration",
                    "kind": "platform",
                    "required": "true"
                }
            }
        },
        "ProjectCapability": {
            "description": "Project Capability that may activate design-time components in an IDE",
            "includeDescription": "capability IDs"
        },
        "NativeReference": {
            "description": "Reference to a native manifest file, or to a file that contains a native manifest",
            "includeDescription": "reference names",
            "kind": "file-list",
            "metadata": {
                "Name": "Base name of manifest file",
                "HintPath": "Relative path to manifest file"
            }
        },
        "ProjectReference": {
            "description": "Reference to another project",
            "includeDescription": "project file paths",
            "kind": "file-list",
            "metadata": {
                "Name": "Friendly display name (optional)",
                "Project": {
                    "description": "Project GUID, in the form {00000000-0000-0000-0000-000000000000}",
                    "kind": "guid"
                },
                "ReferenceOutputAssembly": {
                    "description": "Boolean specifying whether the outputs of the project referenced should be passed to the compiler.",
                    "kind": "bool",
                    "defaultValue": "true"
                },
                "SpecificVersion": {
                    "description": "Whether the exact version of the assembly should be used.",
                    "kind": "bool",
                    "defaultValue": "true"
                },
                "Targets": {
                    "description": "Semicolon separated list of targets in the referenced projects that should be built. Default is the value of $(ProjectReferenceBuildTargets) whose default is blank, indicating the default targets.",
                    "kind": "targetname-list"
                },
                "OutputItemType": {
                    "description": "Item type to emit target outputs into. Default is blank. If the Reference metadata is set to `true` (default) then target outputs will become references for the compiler.",
                    "kind": "itemname"
                },
                "Package": "",
                "EmbedInteropTypes": {
                    "kind": "bool"
                },
                "IncludeAssets": {
                    "description": "Assets to include from this reference",
                    "values": "%(PackageReference.IncludeAssets)"
                },
                "ExcludeAssets": {
                    "description": "Assets to exclude from this reference",
                    "values": "%(PackageReference.IncludeAssets)"
                },
                "PrivateAssets": {
                    "description": "Assets that are private in this reference",
                    "values": "%(PackageReference.IncludeAssets)"
                }
            }
        },
        "Compile": {
            "description": "Source files to be passed to the compiler",
            "includeDescription": "source files",
            "kind": "file-list",
            "metadata": {
                "SubType": "",
                "DependentUpon": "A filename under which this should be grouped in the IDE",
                "AutoGen": {
                    "description": "Whether file was generated from another file",
                    "kind": "bool"
                },
                "DesignTime": "",
                "Link": "Notional path within project to display if the file is physically located outside of the project file's cone (optional)",
                "DesignTimeSharedInput": "",
                "Visible": {
                    "description": "Display in user interface",
                    "kind": "bool",
                    "defaultValue": "true"
                },
                "CopyToOutputDirectory": {
                    "description": "Whether to copy the file to the output directory",
                    "values": {
                        "Never": "Do not copy the file",
                        "Always": "Always copy the file",
                        "PreservNewest": "Copy the file if it is newer than the existing copy"
                    },
                    "defaultValue": "Never"
                },
                "VBMyExtensionTemplateID": ""
            }
        },
        "EmbeddedResource": {
            "description": "Resources to be embedded in the generated assembly",
            "includeDescription": "resource files",
            "kind": "file-list",
            "metadata": {
                "LogicalName": "Overrides the default resource ID",
                "Generator": "Name of any file generator that is run on this item",
                "LastGenOutput": "File that was created by any file generator that was run on this item",
                "CustomToolNamespace": "Namespace into which any file generator that is run on this item should create code",
                "DependentUpon": "%(Compile.DependentUpon)",
                "Link": "%(Compile.Link)",
                "Visible": "%(Compile.Visible)",
                "SubType": "%(Compile.SubType)",
                "CopyToOutputDirectory": "%(Compile.CopyToOutputDirectory)"
            }
        },
        "Content": {
            "description": "Files that are not compiled, but may be embedded or published",
            "includeDescription": "content files",
            "kind": "file-list",
            "metadata": {
                "Generator": "%(EmbeddedResource.Generator)",
                "LastGenOutput": "%(EmbeddedResource.LastGenOutput)",
                "CustomToolNamespace": "%(EmbeddedResource.CustomToolNamespace)",
                "DependentUpon": "%(Compile.DependentUpon)",
                "Link": "%(Compile.Link)",
                "Visible": "%(Compile.Visible)",
                "SubType": "%(Compile.SubType)",
                "CopyToOutputDirectory": "%(Compile.CopyToOutputDirectory)",
                "CopyToPublishDirectory": {
                    "description": "Whether to copy the file to the publish directory",
                    "values": {
                        "Never": "Do not copy the file",
                        "Always": "Always copy the file",
                        "PreservNewest": "Copy the file if it is newer than the existing copy"
                    },
                    "defaultValue": "Never"
                },
                "Group": "",
                "IsAssembly": "",
                "PublishState": {
                    "values": {
                        "Default": "",
                        "Included": "",
                        "Excluded": "",
                        "DataFile": "",
                        "Prerequisite": ""
                    },
                    "defaultValue": "Default"
                }
            }
        },
        "Page": {
            "description": "XAML files that are converted to binary and compiled into the assembly",
            "includeDescription": "XAML files",
            "kind": "file-list",
            "metadata": {
                "Generator": "%(EmbeddedResource.Generator)",
                "LastGenOutput": "%(EmbeddedResource.LastGenOutput)",
                "CustomToolNamespace": "%(EmbeddedResource.CustomToolNamespace)",
                "DependentUpon": "%(Compile.DependentUpon)",
                "Link": "%(Compile.Link)",
                "Visible": "%(Compile.Visible)",
                "SubType": "%(Compile.SubType)",
                "CopyToOutputDirectory": "%(Compile.CopyToOutputDirectory)",
                "Group": "%(Content.Group)"
            }
        },
        "Resource": {
            "description": "File that is compiled into the assembly",
            "includeDescription": "resource files",
            "kind": "file-list",
            "metadata": {
                "Generator": "%(EmbeddedResource.Generator)",
                "LastGenOutput": "%(EmbeddedResource.LastGenOutput)",
                "CustomToolNamespace": "%(EmbeddedResource.CustomToolNamespace)",
                "DependentUpon": "%(Compile.DependentUpon)",
                "Link": "%(Compile.Link)",
                "Visible": "%(Compile.Visible)",
                "SubType": "%(Compile.SubType)",
                "CopyToOutputDirectory": "%(Compile.CopyToOutputDirectory)",
                "Group": "%(Content.Group)"
            }
        },
        "ApplicationDefinition": {
            "description": "XAML file that contains the application definition, only one can be defined",
            "includeDescription": "application definition",
            "kind": "file",
            "metadata": {
                "Generator": "%(EmbeddedResource.Generator)",
                "LastGenOutput": "%(EmbeddedResource.LastGenOutput)",
                "CustomToolNamespace": "%(EmbeddedResource.CustomToolNamespace)",
                "DependentUpon": "%(Compile.DependentUpon)",
                "Link": "%(Compile.Link)",
                "Visible": "%(Compile.Visible)",
                "SubType": "%(Compile.SubType)",
                "CopyToOutputDirectory": "%(Compile.CopyToOutputDirectory)",
                "Group": "%(Content.Group)"
            }
        },
        "None": {
            "description": "Files that should have no role in the build process",
            "kind": "file-list",
            "metadata": {
                "Generator": "%(EmbeddedResource.Generator)",
                "LastGenOutput": "%(EmbeddedResource.LastGenOutput)",
                "CustomToolNamespace": "%(EmbeddedResource.CustomToolNamespace)",
                "DependentUpon": "%(Compile.DependentUpon)",
                "Link": "%(Compile.Link)",
                "Visible": "%(Compile.Visible)",
                "SubType": "%(Compile.SubType)",
                "CopyToOutputDirectory": "%(Compile.CopyToOutputDirectory)"
            }
        },
        "BaseApplicationManifest": {
            "description": "The base application manifest for the build. Contains ClickOnce security information.",
            "kind": "file"
        },
        "Folder": {
            "description": "Folder on disk to display in the IDE",
            "includeDescription": "folders",
            "kind": "folder-list"
        },
        "Import": {
            "description": "Assemblies whose namespaces should be imported by the Visual Basic compiler.",
            "kind": "file-list"
        },
        "WebReferences": {
            "description": "Name of Web References folder to display in user interface",
            "kind": "string"
        },
        "WebReferenceUrl": {
            "description": "Represents a reference to a web service",
            "includeDescription": "web service urls",
            "kind": "url",
            "metadata": {
                "UrlBehavior": "",
                "RelPath": "",
                "UpdateFromURL": "",
                "ServiceLocationURL": "",
                "CachedDynamicPropName": "",
                "CachedAppSettingsObjectName": "",
                "CachedSettingsPropName": ""
            }
        },
        "FileAssociation": {
            "kind": "string",
            "metadata": {
                "Visible": "%(Compile.Visible)",
                "DefaultIcon": "",
                "Description": "",
                "Progid": ""
            }
        },
        "BootstrapperFile": {
            "kind": "file",
            "metadata": {
                "Visible": "%(Compile.Visible)",
                "ProductName": "",
                "Install": ""
            }
        },
        "PublishFile": {
            "kind": "file-list",
            "metadata": {
                "Visible": "%(Compile.Visible)",
                "Group": "%(Content.Group)",
                "PublishState": "%(Content.PublishState)",
                "IncludeHash": {
                    "kind": "bool"
                },
                "IsAssembly": {
                    "kind": "bool"
                }
            }
        },
        "TargetPlatform": {
            "description": "Target platform in the form of \"[Identifier], Version=[Version]\", for example, \"Windows, Version=8.0\""
        },
        "Analyzer": {
            "description": "An assembly containing diagnostic analyzers",
            "includeDescription": "relative or absolute assembly paths",
            "kind": "file-list"
        },
        "CodeAnalysisDependentAssemblyPaths": {
            "description": "Additional reference assembly paths to pass to the Code Analysis command line tool.",
            "includeDescription": "fully qualified paths to directories containing reference assemblies to be used by Code Analysis",
            "kind": "folder-list"
        },
        "CodeAnalysisDictionary": {
            "description": "Code Analysis custom dictionaries.",
            "includeDescription": "Code Analysis custom dictionaries",
            "kind": "folder-list"
        },
        "CodeAnalysisImport": {
            "description": "Code Analysis projects (*.fxcop) or reports to import.",
            "includeDescription": "Code Analysis projects or reports",
            "kind": "file-list"
        }
    },
    "properties": {
        "VisualStudioVersion": "The version of Visual Studio into which this project is loaded",
        "MinimumVisualStudioVersion": "The minimum version of Visual Studio required to open this project",
        "AdditionalFileItemNames": "",
        "AllowUnsafeBlocks": {
            "description: ""Whether to allow unsafe code",
            "kind" : "bool"
        },
        "AppConfigForCompiler": "",
        "ApplicationIcon": "",
        "ApplicationRevision": "",
        "ApplicationVersion": {
            "kind": "version"
        },
        "AppDesignerFolder": "Name of folder for Application Designer",
        "AspNetConfiguration": "",
        "AssemblyKeyContainerName": "",
        "AssemblyKeyProviderName": "",
        "AssemblyName": "Name of output assembly",
        "AssemblyOriginatorKeyFile": "",
        "AssemblyOriginatorKeyFileType": "",
        "AssemblyOriginatorKeyMode": "",
        "AssemblyType": "",
        "AutoGenerateBindingRedirects": "Indicates whether BindingRedirect elements should be automatically generated for referenced assemblies.",
        "AutorunEnabled": {
            "kind": "bool"
        },
        "BaseAddress": "",
        "BootstrapperComponentsLocation": {
            "values": {
                "HomeSite": "",
                "Relative": "",
                "Absolute": ""
            }
        },
        "BootstrapperComponentsUrl": "",
        "BootstrapperEnabled": {
            "kind": "bool"
        },
        "CharacterSet": "",
        "CheckForOverflowUnderflow": "",
        "CLRSupport": "",
        "UseDebugLibraries": {
            "kind": "bool"
        },
        "CodePage": "The codepage the compiler should use when reading source files",
        "ConsolePause" : {
            "description": "Whether the IDE should keep the console open after executing a console application",
            "kind" : "bool"
        },
         "Configuration": {
            "description": "The configuration that is being used to build the project, for example \"Debug\" or \"Release\"",
            "kind" : "configuration"
        },
        "ConfigurationName": "",
        "ConfigurationOverrideFile": "",
        "CreateDesktopShortcut": {
            "kind": "bool"
        },
        "CreateWebPageOnPublish": {
            "kind": "bool"
        },
        "CurrentSolutionConfigurationContents": "",
        "DebugSecurityZoneURL": "",
        "DebugSymbols": {
            "description": "Whether to emit debug symbols",
            "kind": "bool",
            "default": "false"
        },
        "DebugType": {
            "description": "What kind of debug information to emit",
            "values": {
                "none": "No debug information",
                "pdbonly": "Emit Windows-only PDB debug symbols",
                "portable": "Emit portable PDB debug symbols",
                "full": "Emit Windows-only PDB debug symbols"
            }
        },
        "DefaultClientScript": "",
        "DefaultHTMLPageLayout": "",
        "DefaultTargetSchema": "",
        "DefineConstants": {
            "description": "Conditional compiler defines",
            "string-list": "bool"
        },
        "DelaySign": "",
        "DisableLangXtns": "",
        "DisallowUrlActivation": {
            "kind": "bool"
        },
        "ConfigurationType": "",
        "DeployDirSuffix": "",
        "DisableFastUpToDateCheck": {
            "description": "Whether Visual Studio should do its own faster up-to-date check before Building, rather than invoke MSBuild to do a possibly more accurate one. You would set this to false if you have a heavily customized build process and builds in Visual Studio are not occurring when they should.",
            "kind": "bool"
        },
        "DocumentationFile": {
            "description": "Filename for the xml documentation file",
            "kind": "string"
        },
        "EnableASPDebugging": "",
        "EnableASPXDebugging": "",
        "EnableSQLServerDebugging": "",
        "EnableSecurityDebugging": "",
        "EnableUnmanagedDebugging": "",
        "ErrorLog": "",
        "ErrorReport": {
            "description" : "Reporting behavior for internal compiler errors",
            "values" : {
                "prompt" : "Open a dialog asking whether you want to report the internal compiler error",
                "queue" : "Queue the internal compiler error reports and prompt you later",
                "send" : "Automatically report the internal compiler error to Microsoft",
                "none" : "Do not report internal compiler error"
            },
            "default" : "none"
        },
        "EmbedManifest": "",
        "ErrorReportUrl": "",
        "ExcludeDeploymentUrl": {
            "kind": "bool"
        },
        "ExcludedPermissions": "",
        "FallbackCulture": "",
        "FileAlignment": "",
        "FileUpgradeFlags": "",
        "FormFactorID": "",
        "FrameworkPathOverride": {
            "description": "Overrides the path to the target framework"
        },
        "GenerateManifests": "",
        "GenerateLibraryLayout": {
            "kind": "bool"
        },
        "GeneratePackageOnBuild": {
            "description": "Value indicating whether a NuGet package will be generated when the project is built",
            "kind": "bool"
        },
        "DisableXbfGeneration": {
            "kind": "bool"
        },
        "SuppressXamlWarnings": "",
        "XamlRootsLog": "",
        "XamlSavedStateFilePath": "",
        "GenerateSerializationAssemblies": "",
        "HostInBrowser": {
            "kind": "bool"
        },
        "IgnoreImportLibrary": {
            "kind": "bool"
        },
        "Install": "",
        "InstallFrom": {
            "values": [
                "Web",
                "Unc",
                "Disk"
            ]
        },
        "InstallUrl": "",
        "IsCodeSharingProject": {
            "kind": "bool"
        },
        "IsWebBootstrapper": "",
        "JCPA": "",
        "Keyword": "",
        "LangVersion": "",
        "Prefer32Bit": "",
        "HighEntropyVA": "",
        "LinkIncremental": "",
        "ManifestCertificateThumbprint": "",
        "ManifestKeyFile": "",
        "MapFileExtensions": "",
        "MinimumRequiredVersion": {
            "kind": "version"
        },
        "MyType": "",
        "MSBuildAllProjects": "",
        "MSBuildTreatWarningsAsErrors": {
            "description": "Indicates whether to treat all warnings as errors when building a project.",
            "kind": "bool"
        },
        "MSBuildWarningsAsMessages": {
            "description": "Indicates a semicolon delimited list of warnings to treat as low importance messages when building a project."
        },
        "MSBuildWarningsAsErrors": {
            "description": "Indicates a semicolon delimited list of warnings to treat as errors when building a project."
        },
        "NoConfig": "",
        "NoStandardLibraries": "",
        "NoStdLib": {
            "description": "Whether to disable automatic referencing of standard libraries such as mscorlib",
            "kind": "bool",
            "defaultValue": "false"
        },
        "NoWarn": "Comma separated list of disabled warnings",
        "OldToolsVersion": "",
        "OutDir": {
            "description": "The output directory",
            "kind" : "folder"
        },
        "OpenBrowserOnPublish": {
            "kind": "bool"
        },
        "Optimize": {
            "description": "Whether the compiler should optimize the output",
            "kind": "bool"
        },
        "OSVersion": "",
        "OutputPath": {
            "description": "Path to output folder, with trailing slash",
            "kind": "folderwithslash"
        },
        "OutputType": {
            "description": "The type of output from the compiler, such as an executable or library",
            "values": {
                "Exe": "A console executable",
                "Library": "A library",
                "Module": "A .NET module",
                "WinExe": "A Windows executable"
            }
        },
        "PackageTargetFallback": "Allows packages using alternative monikers to be referenced in this project, which include older (e.g. dnxcore50, dotnet5.x) and Portable Class Library names.",
        "Platform": {
            "description": "The platform that is being used to build the project, for example \"AnyCPU\" or \"x86\"",
            "kind" : "configuration"
        },,
        "PlatformName": "",
        "PlatformFamilyName": "",
        "PlatformID": "",
        "PlatformTarget": "",
        "PlatformToolset": "",
        "PostBuildEvent": "Command line to be run at the end of build",
        "PreBuildEvent": "Command line to be run at the start of build",
        "PreserveCompilationContext": {
            "description": "Value indicating whether reference assemblies can be used in dynamic compilation",
            "kind": "bool"
        },
        "ProductName": "",
        "ProductVersion": "",
        "ProjectGuid": {
            "description" : "A GUID that uniquely identifies the project within the solution",
            "kind" : "guid"
        },
        "ProjectType": "",
        "ProjectTypeGuids":  {
            "description" : "A list of GUIDs that activate design-time capabilities in an IDE",
            "kind" : "guid-list"
        },
        "PublisherName": "",
        "PublishUrl": "",
        "RecursePath": "",
        "ReferencePath": {
            "description": "Semi-colon separated list of folders to search during reference resolution",
            "kind": "folder-list"
        },
        "RegisterForComInterop": "",
        "RemoteDebugEnabled": "",
        "RemoteDebugMachine": "",
        "RemoveIntegerChecks": "",
        "ReportAnalyzer": "",
        "RepositoryType": "The type of the repository where the project is stored (e.g. git)",
        "RepositoryUrl": {
            "description": "The URL for the repository where the project is stored",
            "kind": "url"
        },
        "ResponseFile": "",
        "RootNamespace": "The root namespace to use for new files",
        "RuntimeIdentifier": {
            "description": "Runtime identifier supported by the project (e.g. win10-x64)",
            "kind": "runtimeid"
        },
        "RuntimeIdentifiers": {
            "description": "Semi-colon separated list of runtime identifiers supported by the project (e.g. win10-x64;osx.10.11-x64;ubuntu.16.04-x64)",
            "kind": "runtimeid-list"
        },
        "SccProjectName": "",
        "SccLocalPath": "",
        "SccProvider": "",
        "RunCodeAnalysis": {
            "description": "Indicates whether to run Code Analysis during the build.",
            "kind": "bool"
        },
        "RunPostBuildEvent": "",
        "SchemaVersion": "",
        "SecureScoping": "",
        "SignAssembly": {
            "description" : "Whether to sign the assembly",
            "kind": "bool"
        },
        "SignManifests": "",
        "StartAction": "",
        "StartArguments": "",
        "StartPage": "",
        "StartProgram": "",
        "StartURL": "",
        "StartWithIE": "",
        "StartWorkingDirectory": "",
        "StartupObject": "Type that contains the main entry point",
        "SuiteName": "",
        "SupportUrl": "",
        "TargetFrameworkProfile": {
            "kind" : "targetframeworkprofile"
        },
        "TargetCulture": "",
        "TargetFramework": {
            "description": "Framework that this project targets. Must be a Target Framework Moniker (e.g. netcoreapp1.0)",
            "kind": "targetframework"
        },
        "TargetFrameworks": {
            "description": "Semi-colon separated list of frameworks that this project targets. Must be a Target Framework Moniker (e.g. netcoreapp1.0;net461)",
            "kind": "targetframework-list"
        },
        "TargetFrameworkVersion":  {
            "kind" : "targetframeworkversion"
        },
        "TargetPlatformIdentifier":  {
            "kind" : "targetframeworkidentofier"
        },
        "TargetPlatformVersion": "",
        "TargetZone": "",
        "TreatWarningsAsErrors": "",
        "TrustUrlParameters": "",
        "TypeComplianceDiagnostics": "",
        "UICulture":  {
            "kind" : "lcid"
        },
        "UpgradeBackupLocation": "",
        "UpdateEnabled": {
            "kind": "bool"
        },
        "UpdateInterval":  {
            "kind" : "int"
        },
        "UpdateIntervalUnits": {
            "values": [
                "Hours",
                "Days",
                "Weeks"
            ]
        },
        "UpdateMode": {
            "values": [
                "Foreground",
                "Background"
            ]
        },
        "UpdatePeriodically": {
            "kind": "bool"
        },
        "UpdateRequired": {
            "kind": "bool"
        },
        "UpdateUrl": {
            "kind": "url"
        },
        "UseAppConfigForCompiler": {
            "kind": "bool"
        },
        "UseApplicationTrust": "",
        "UseVSHostingProcess": "",
        "UTF8Output": "",
        "VSTO_TrustAssembliesLocation": "",
        "WarningLevel": {
            "description": "What level of warnings the compiler should emit, between 0 and 4 inclusive",
            "kind": "int"
        },
        "WarningsAsErrors": "Comma separated list of warning numbers to treat as errors",
        "WebPage": "",
        "Win32ResourceFile": "",
        "TargetPath" : {
            "description": "Absolute path of the project's primary output",
            "kind" : "file"
        },
        "TargetName" : {
            "description": "Base name of the project's primary output",
            "kind" : "string"
        },
        "TargetExt" : {
            "description": "File extension of the project's primary output",
            "kind" : "extension"
        },
        "TargetDir" : {
            "description": "Directory path of the project's primary output",
            "kind" : "folderwithslash"
        },
        "ProjectDir" : {
            "description": "Directory containing the root project",
            "kind" : "folderwithslash"
        },
        "ProjectName" : {
            "description": "Name of the project, formed by appending the extension to the base name",
            "kind" : "string"
        },
        "ProjectExt" : {
            "description": "File extension of the project",
            "kind" : "extension"
        },
        "ProjectName" : {
            "description": "Base name of the project",
            "kind" : "string"
        },
        "ProjectPath" : {
            "description": "Absolute path of the project",
            "kind" : "file"
        },
        "SolutionDir": {
            "description" : "The directory containing the solution file",
            "kind" : "folderwithslash"
        },
        "SolutionName": {
            "description" : "Base name of the solution file, without its extension",
            "kind" : "string"
        },
        "SolutionExt": {
            "description" : "The extension of the solution file.",
            "kind" : "string"
        },
        "SolutionFileName": {
            "description" : "Name of the solution file, formed by appending the extension to the base name.",
            "kind" : "string"
        },
        "SolutionPath": {
            "description" : "Absolute path of the solution file",
            "kind" : "file"
        }
    }
}